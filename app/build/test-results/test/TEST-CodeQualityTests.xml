<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="CodeQualityTests" tests="1" skipped="0" failures="1" errors="0" timestamp="2022-10-10T17:39:56" hostname="Faruks-MacBook-Pro.local" time="0.277">
  <properties/>
  <testcase name="codeQuality()" classname="CodeQualityTests" time="0.277">
    <failure message="org.opentest4j.AssertionFailedError: Max amount (5) of quality issues exceeded:26 ==&gt; expected: &lt;true&gt; but was: &lt;false&gt;" type="org.opentest4j.AssertionFailedError">org.opentest4j.AssertionFailedError: Max amount (5) of quality issues exceeded:26 ==&gt; expected: &lt;true&gt; but was: &lt;false&gt;
	at app//org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:55)
	at app//org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:40)
	at app//org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:193)
	at app//CodeQualityTests.codeQuality(CodeQualityTests.java:70)
	at java.base@17.0.4.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.4.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.4.1/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.4.1/java.lang.reflect.Method.invoke(Method.java:568)
	at app//org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at app//org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at app//org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at app//org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at app//org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at app//org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base@17.0.4.1/java.util.ArrayList.forEach(ArrayList.java:1511)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base@17.0.4.1/java.util.ArrayList.forEach(ArrayList.java:1511)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at app//org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at app//org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at app//org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at app//org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at app//org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:86)
	at org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:86)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:53)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base@17.0.4.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base@17.0.4.1/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base@17.0.4.1/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base@17.0.4.1/java.lang.reflect.Method.invoke(Method.java:568)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at jdk.proxy1/jdk.proxy1.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at app//worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <system-out><![CDATA[0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/controller/Controller.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/controller/MemberController.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/controller/App.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/model/persistence/Persistence.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/model/persistence/Imapper.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/model/persistence/SqlMapper.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/model/domain/Contract.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/model/domain/MemberId.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/model/domain/Time.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/model/domain/Member.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/model/domain/Registry.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/model/domain/Item.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/model/TimeAdvancedObserver.java
0 CheckStyle Issues in /Users/fy/Documents/1DV607/a2/app/src/main/java/view/ConsoleUi.java
5 FindBugs Issues in model/domain/Item.java
text:lines: 18-239 
new model.domain.Item(String, String, int, int, Boolean, int, String, String, String) uses the same 
  code for two branches 
Method uses the same code for two branches 
This method uses the same code to implement two branches of a conditional branch. Check to ensure 
  that this isn't a coding mistake.

text:lines: 18-239 
Call to equals(null) in new model.domain.Item(String, String, int, int, Boolean, int, String, 
  String, String) 
Call to equals(null) 
This method calls equals(Object), passing a null value as the argument. According to the contract of 
  the equals() method, this call should always return false.

text:lines: 18-239 
Unread field: itemId 
Unread field 
This field is never read. Consider removing it from the class.

text:lines: 18-239 
Unread field: owner 
Unread field 
This field is never read. Consider removing it from the class.

text:lines: 18-239 
Unused public or protected field: itemClass 
Unused public or protected field 
This field is never used. The field is public or protected, so perhaps it is intended to be used 
  with classes not seen as part of the analysis. If not, consider removing it from the class.

1 FindBugs Issues in model/domain/MemberId.java
text:lines: 9-42 
Unread field: dateCreated 
Unread field 
This field is never read. Consider removing it from the class.

3 FindBugs Issues in view/ConsoleUi.java
text:lines: 20-424 
byeBye() invokes System.exit(...), which shuts down the entire virtual machine 
Method invokes System.exit(...) 
Invoking System.exit shuts down the entire Java virtual machine. This should only been done when it 
  is appropriate. Such calls make it hard or impossible for your code to be invoked by other code. 
  Consider throwing a RuntimeException instead.

text:lines: 20-424 
new view.ConsoleUi(Scanner) may expose internal representation by storing an externally mutable 
  object into ConsoleUi.input 
May expose internal representation by incorporating reference to mutable object 
This code stores a reference to an externally mutable object into the internal representation of the 
  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
  would compromise security or other important properties, you will need to do something different. 
  Storing a copy of the object is better approach in many situations.

text:lines: 20-424 
setInput(Scanner) may expose internal representation by storing an externally mutable object into 
  ConsoleUi.input 
May expose internal representation by incorporating reference to mutable object 
This code stores a reference to an externally mutable object into the internal representation of the 
  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
  would compromise security or other important properties, you will need to do something different. 
  Storing a copy of the object is better approach in many situations.

3 FindBugs Issues in controller/Controller.java
text:lines: 13-127 
Found reliance on default encoding in new controller.Controller(ConsoleUi, Registry): new 
  java.util.Scanner(InputStream) 
Reliance on default encoding 
Found a call to a method which will perform a byte to String (or String to byte) conversion, and 
  will assume that the default platform encoding is suitable. This will cause the application 
  behavior to vary between platforms. Use an alternative API and specify a charset name or Charset 
  object explicitly.

text:lines: 13-127 
new controller.Controller(ConsoleUi, Registry) may expose internal representation by storing an 
  externally mutable object into Controller.console 
May expose internal representation by incorporating reference to mutable object 
This code stores a reference to an externally mutable object into the internal representation of the 
  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
  would compromise security or other important properties, you will need to do something different. 
  Storing a copy of the object is better approach in many situations.

text:lines: 13-127 
new controller.Controller(ConsoleUi, Registry) may expose internal representation by storing an 
  externally mutable object into Controller.registry 
May expose internal representation by incorporating reference to mutable object 
This code stores a reference to an externally mutable object into the internal representation of the 
  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
  would compromise security or other important properties, you will need to do something different. 
  Storing a copy of the object is better approach in many situations.

3 FindBugs Issues in controller/MemberController.java
text:lines: 17-300 
new controller.MemberController(ConsoleUi, Registry) may expose internal representation by storing 
  an externally mutable object into MemberController.console 
May expose internal representation by incorporating reference to mutable object 
This code stores a reference to an externally mutable object into the internal representation of the 
  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
  would compromise security or other important properties, you will need to do something different. 
  Storing a copy of the object is better approach in many situations.

text:lines: 17-300 
new controller.MemberController(ConsoleUi, Registry) may expose internal representation by storing 
  an externally mutable object into MemberController.registry 
May expose internal representation by incorporating reference to mutable object 
This code stores a reference to an externally mutable object into the internal representation of the 
  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
  would compromise security or other important properties, you will need to do something different. 
  Storing a copy of the object is better approach in many situations.

text:lines: 17-300 
Nullcheck of input at line 167 of value previously dereferenced in isNull(String) 
Nullcheck of value previously dereferenced 
A value is checked here to see whether it is null, but this value cannot be null because it was 
  previously dereferenced and if it were null a null pointer exception would have occurred at the 
  earlier dereference. Essentially, this code and the previous dereference disagree as to whether 
  this value is allowed to be null. Either the check is redundant or the previous dereference is 
  erroneous.

2 FindBugs Issues in model/domain/Registry.java
text:lines: 10-178 
Dead store to i in createContract(Member, Member, int, int) 
Dead store to local variable 
This instruction assigns a value to a local variable, but the value is not read or used in any 
  subsequent instruction. Often, this indicates an error, because the value computed is never used. 
 
Note that Sun's javac compiler often generates dead stores for final local variables. Because 
  SpotBugs is a bytecode-based tool, there is no easy way to eliminate these false positives.

text:lines: 10-178 
getMembers() may expose internal representation by returning Registry.members 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the object's fields exposes the 
  internal representation of the object. If instances are accessed by untrusted code, and unchecked 
  changes to the mutable object would compromise security or other important properties, you will 
  need to do something different. Returning a new copy of the object is better approach in many 
  situations.

0 FindBugs Issues in controller/App.java
6 FindBugs Issues in model/domain/Contract.java
text:lines: 18-30 
getLentTo() may expose internal representation by returning Contract.lentTo 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the object's fields exposes the 
  internal representation of the object. If instances are accessed by untrusted code, and unchecked 
  changes to the mutable object would compromise security or other important properties, you will 
  need to do something different. Returning a new copy of the object is better approach in many 
  situations.

text:lines: 18-30 
getOwner() may expose internal representation by returning Contract.owner 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the object's fields exposes the 
  internal representation of the object. If instances are accessed by untrusted code, and unchecked 
  changes to the mutable object would compromise security or other important properties, you will 
  need to do something different. Returning a new copy of the object is better approach in many 
  situations.

text:lines: 18-30 
new model.domain.Contract(Member, Member, int, int) may expose internal representation by storing an 
  externally mutable object into Contract.lentTo 
May expose internal representation by incorporating reference to mutable object 
This code stores a reference to an externally mutable object into the internal representation of the 
  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
  would compromise security or other important properties, you will need to do something different. 
  Storing a copy of the object is better approach in many situations.

text:lines: 18-30 
new model.domain.Contract(Member, Member, int, int) may expose internal representation by storing an 
  externally mutable object into Contract.owner 
May expose internal representation by incorporating reference to mutable object 
This code stores a reference to an externally mutable object into the internal representation of the 
  object. If instances are accessed by untrusted code, and unchecked changes to the mutable object 
  would compromise security or other important properties, you will need to do something different. 
  Storing a copy of the object is better approach in many situations.

text:lines: 18-30 
Unread field: contractPeriod 
Unread field 
This field is never read. Consider removing it from the class.

text:lines: 18-30 
Unread field: item 
Unread field 
This field is never read. Consider removing it from the class.

3 FindBugs Issues in model/domain/Member.java
text:lines: 17-301 
Dead store to item in updateItems() 
Dead store to local variable 
This instruction assigns a value to a local variable, but the value is not read or used in any 
  subsequent instruction. Often, this indicates an error, because the value computed is never used. 
 
Note that Sun's javac compiler often generates dead stores for final local variables. Because 
  SpotBugs is a bytecode-based tool, there is no easy way to eliminate these false positives.

text:lines: 17-301 
getItemsOwned() may expose internal representation by returning Member.itemsOwned 
May expose internal representation by returning reference to mutable object 
Returning a reference to a mutable object value stored in one of the object's fields exposes the 
  internal representation of the object. If instances are accessed by untrusted code, and unchecked 
  changes to the mutable object would compromise security or other important properties, you will 
  need to do something different. Returning a new copy of the object is better approach in many 
  situations.

text:lines: 17-301 
Unused field: costTotal 
Unused field 
This field is never used. Consider removing it from the class.

0 FindBugs Issues in model/domain/Time.java
0 FindBugs Issues in model/persistence/Imapper.java
0 FindBugs Issues in model/TimeAdvancedObserver.java
0 FindBugs Issues in model/persistence/SqlMapper.java
0 FindBugs Issues in model/persistence/Persistence.java
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
