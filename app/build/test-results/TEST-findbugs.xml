<?xml version="1.0" encoding="utf-8"?>
<testsuite package="org.spotbugs" time="0" tests="20" errors="3" name="findbugs">
<testcase time="0" name="model/domain/Item.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/domain/MemberId.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="view/EnumChoices.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="view/ConsoleUi.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 24-616 
byeBye() invokes System.exit(...), which shuts down the entire virtual 
  machine 
Method invokes System.exit(...) 
Invoking System.exit shuts down the entire Java virtual machine. This 
  should only been done when it is appropriate. Such calls make it hard or 
  impossible for your code to be invoked by other code. Consider throwing a 
  RuntimeException instead.
----------------
]]></failure>
</testcase><testcase time="0" name="view/CategoryEnum.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="controller/Controller.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/domain/TimeAdvancedObserver.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="view/Language.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="view/MemberEnum.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="view/SwedishUi.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 25-617 
byeBye() invokes System.exit(...), which shuts down the entire virtual 
  machine 
Method invokes System.exit(...) 
Invoking System.exit shuts down the entire Java virtual machine. This 
  should only been done when it is appropriate. Such calls make it hard or 
  impossible for your code to be invoked by other code. Consider throwing a 
  RuntimeException instead.
----------------
]]></failure>
</testcase><testcase time="0" name="controller/MemberController.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/domain/Registry.java" classname="FindBugs Issues">
<failure message="issues" ><![CDATA[lines: 19-260 
setMembers(ArrayList) may expose internal representation by storing an 
  externally mutable object into Registry.members 
May expose internal representation by incorporating reference to mutable 
  object 
This code stores a reference to an externally mutable object into the 
  internal representation of the object. If instances are accessed by 
  untrusted code, and unchecked changes to the mutable object would 
  compromise security or other important properties, you will need to do 
  something different. Storing a copy of the object is better approach in 
  many situations.
----------------
]]></failure>
</testcase><testcase time="0" name="controller/App.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/domain/Contract.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/domain/Member.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/domain/Time.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/persistence/Imapper.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/persistence/SqlMapper.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="view/ItemEnum.java" classname="FindBugs Issues">
</testcase><testcase time="0" name="model/persistence/Persistence.java" classname="FindBugs Issues">
</testcase></testsuite>